# 自分の得意な言語で
# Let's チャレンジ！！
input_line = gets

n = input_line.split[0].to_i
$h = input_line.split[1].to_i
$w = input_line.split[2].to_i

town = []
dist = []

for i in 0...n
    input_line = gets
    town[i] = [input_line.split[0].to_i, input_line.split[1].to_i]
    dist[i] = Array.new(n, Float::INFINITY)
end

#2街間の距離をループ対応で測る
def town_distance(from, to)
    low_x = [from[0], to[0]].min
    high_x = [from[0], to[0]].max
    x_dist = [high_x-low_x, $w-high_x+low_x].min
    
    low_y = [from[1], to[1]].min
    high_y = [from[1], to[1]].max
    y_dist = [high_y-low_y, $h-high_y+low_y].min
    
    return x_dist+y_dist
end

total_dist = 0
visited_town = []

for i in 0...n
    for j in 0...n
        if i==j then
            next
        end
        dist[i][j] = town_distance(town[i], town[j])
    end
    
    if visited_town.include?(i) && visited_town.include?(dist[i].index(dist[i].min)) then
        p "skip:  #{i}, #{dist[i].index(dist[i].min)}"
        next
    else
        visited_town.push(i)
        visited_town.push(dist[i].index(dist[i].min))
        p "#{i}, #{dist[i].index(dist[i].min)}"
        total_dist += dist[i].min
    end
    
    visited_town.uniq!
end

p visited_town.sort

# dist.each do |d|
#     p d
# end
